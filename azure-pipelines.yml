trigger:
- master

variables: 
  LINUX_INSTALL: "g++-10 git python-pip libasound2-dev libfreetype6-dev libgl1-mesa-dev libglu1-mesa-dev libx11-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev"
  LINUX_OPTIONS: "builtin_openssl=yes builtin_zlib=yes builtin_libpng=yes no_editor_splash=yes verbose=yes"

jobs:

  - job: "mingw"
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - script: |
        sudo apt install docker -y
        docker run -ti ubuntu /bin/bash
        apt update
        apt upgrade
        exit



  ##### JOB 1 ######
  - job: "linux_static"
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - script: |
        gfdfg
        cat /etc/*-release
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        sudo apt-get -qq update
        sudo apt-get -qq install $(LINUX_INSTALL) wget xz-utils -y
        sudo pip install scons

        sudo ln -svf /usr/bin/gcc-10 /usr/bin/gcc
        sudo ln -svf /usr/bin/g++-10 /usr/bin/g++
        sudo ln -svf /usr/bin/gcc-ar-10 /usr/bin/gcc-ar
        sudo ln -svf /usr/bin/gcc-nm-10 /usr/bin/gcc-nm
        sudo ln -svf /usr/bin/gcc-ranlib-10 /usr/bin/gcc-ranlib
        
        wget https://downloads.tuxfamily.org/godotengine/3.2.2/beta3/godot-3.2.2-beta3.tar.xz
        tar xf godot-3.2.2-beta3.tar.xz --strip-components 1
        sed -i '/configure(/a \    env.Prepend(CCFLAGS=["-static"])' platform/x11/detect.py
        sed -i '/configure(/a \    env.Prepend(CFLAGS=["-static"])' platform/x11/detect.py
        sed -i '/configure(/a \    env.Prepend(CXXFLAGS=["-static"])' platform/x11/detect.py
        scons p=x11 -j5 tools=yes target=release_debug debug_symbols=no $(LINUX_OPTIONS) optimize=size
        ls
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(System.DefaultWorkingDirectory)/bin
